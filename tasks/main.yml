---
# File: tasks/main.yml - Main tasks for Consul

- name: Create cluster groupings
  group_by: key={{ consul_node_role }}

- group_by: key=os_{{ ansible_os_family }}

- name: "Add Consul user"
  user: name=consul comment="Consul user" uid=1042 group=bin

- name: "Distribution specific variables"
  include_vars: main.yml

- name: "CentOS tasks"
  include: CentOS.yml
  when: ansible_distribution  == "CentOS"

- name: "Debian tasks"
  include: Debian.yml
  when: ansible_distribution  == "Debian"

- name: "Red Hat tasks"
  include: RedHat.yml
  when: ansible_distribution  == "RedHat"

- name: "Ubuntu tasks"
  include: Ubuntu.yml
  when: ansible_distribution  == "Ubuntu"

- name: Generate Consul key
  shell: PATH=/usr/local/bin:$PATH consul keygen
  register: consul_raw_key
  run_once: true

- name: Consul directory
  file: "dest=/opt/consul state=directory owner={{ consul_user }} group={{ consul_group}}"

- name: Consul UI directory
  file: "dest=/opt/consul/ui state=directory owner={{ consul_user }} group={{ consul_group}}"

- name: Consul data directory
  file: "dest=/var/consul state=directory owner={{ consul_user }} group={{ consul_group}}"

- name: Consul log directory
  file: "dest=/var/log/consul state=directory owner={{ consul_user }} group={{ consul_group}}"

- name: Consul PID directory
  file: "dest=/var/run/consul state=directory owner={{ consul_user }} group={{ consul_group}}"

- name: Consul dot d directory
  file: "dest=/etc/consul.d state=directory owner={{ consul_user }} group={{ consul_group}}"

- name: Consul bootstrap directory
  file: "dest=/etc/consul.d/bootstrap state=directory owner={{ consul_user }} group={{ consul_group}}"

- name: Consul server directory
  file: "dest=/etc/consul.d/server state=directory owner={{ consul_user }} group={{ consul_group}}"

- name: Consul client directory
  file: "dest=/etc/consul.d/client state=directory owner={{ consul_user }} group={{ consul_group}}"

- name: Consul bootstrap configuration
  template: src=server_bootstrap_config.json.j2 dest={{ consul_config_path }}/bootstrap/config.json

- name: Consul server configuration
  template: src=server_config.json.j2 dest={{ consul_config_path }}/server/config.json

- name: Consul client configuration
  template: src=client_config.json.j2 dest={{ consul_config_path }}/client/config.json

- name: Download Consul UI
  get_url: url={{ consul_ui_url }} dest=/tmp/{{ consul_ui_pkg }} sha256sum={{ consul_ui_sha256 }} timeout=74
  tags: installation

- name: Install Consul UI
  unarchive: src=/tmp/{{ consul_ui_pkg }} creates=/opt/consul/ui/index.html dest=/opt/consul/ui/ owner={{ consul_user }} group={{ consul_group }} mode=0755 copy=no
  tags: installation

- name: SYSV init script
  template: src=consul_sysvinit.j2 dest=/etc/init.d/consul owner=root group=root mode=755
  when: not ansible_distribution == "Debian"

- name: Debian init script
  template: src=consul_debian.init.j2 dest=/etc/init.d/consul owner=root group=root mode=755
  when: ansible_distribution == "Debian" and ansible_distribution_major_version|int <= 7

- name: systemd script
  template: src=consul_systemd.service.j2 dest=/lib/systemd/system/consul.service owner=root group=root mode=644
  when: ansible_distribution_major_version|int >= 7

- name: Start Consul
  service: name=consul state=started enabled=yes

- name: Consul running?
  wait_for: delay=5 path=/var/run/consul/consul.pid state=present

- name: Stop Consul
  service: name=consul state=stopped
  when: consul_node_role == "bootstrap"

- name: Reconfigure bootstrap node (systemd)
  replace: dest=/lib/systemd/system/consul.service regexp='bootstrap' replace='server' backup=no
  when: consul_node_role == "bootstrap" and ansible_distribution_major_version|int >= 7

- name: Reconfigure bootstrap node (init.d)
  replace: dest=/etc/init.d/consul regexp='bootstrap' replace='server' backup=no
  when: consul_node_role == "bootstrap" and ansible_distribution_major_version|int <= 7

- name: Reload unit configuration
  shell: systemctl daemon-reload
  when: consul_node_role == "bootstrap" and ansible_distribution_major_version|int >= 7

- name: Start Consul
  service: name=consul state=started

- name: "Enable dnsmasq"
  include: ../tasks/dnsmasq.yml
  when: consul_dnsmasq == "true"

- name: "Restart dnsmasq"
  service: name=dnsmasq state=restarted
  when: consul_dnsmasq == "true"
